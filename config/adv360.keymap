#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// Layers
#define KEYPAD 1
#define FN 2

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
      
      htl: hold_tap_layer {
          compatible = "zmk,behavior-hold-tap";
          label = "HOLD_TAP_LAYER";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "hold-preferred";
          bindings = <&mo>, <&tog>;
      };
      
      htqt: hold_tap_quick_tap {
          compatible = "zmk,behavior-hold-tap";
          label = "HOLD_TAP_QUICK_TAP";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick-tap-ms = <175>;
          flavor = "hold-preferred";
          bindings = <&kp>, <&kp>;
      };

      sht: shift_hold_tap {
          compatible = "zmk,behavior-hold-tap";
          label = "SHIFT_HOLD_TAP";
          #binding-cells = <2>;
          flavor = "hold-preferred";
          tapping-term-ms = <200>;
          quick-tap-ms = <175>;
          bindings = <&kp>, <&kp>;
          // Hold for any key other than shift <46 65>
          hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL       &kp N1    &kp N2     &kp N3   &kp N4    &kp N5 &htl KEYPAD KEYPAD                                                                                              &mo 3           &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB         &kp Q     &kp W      &kp E    &kp R     &kp T  &kp INSERT                                                                                                      &kp PRINTSCREEN &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &mt LALT ESC    &kp A     &kp S      &kp D    &kp F     &kp G  &kp F12                     &mt LGUI LBRC   &mt LALT LBKT             &mt RALT RBKT &mt RGUI RBRC               &kp PAUSE_BREAK &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &sht LSHFT LPAR &kp Z     &kp X      &kp C    &kp V     &kp B                     &none    &none           &kp HOME      &none &none &kp PG_UP     &none             &none                     &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &sht RSHFT RPAR
        &mo FN          &kp GRAVE &caps_word &kp LEFT &kp RIGHT                           &kp BSPC &htqt LCTRL DEL &kp END                   &kp PG_DN     &htqt RCTRL ENTER &kp SPACE                        &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo FN
      >;
    };
    keypad {
      bindings = <
        &trans &trans &trans &trans &trans &trans &trans                                                                 &trans &trans &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &trans
        &trans &trans &trans &trans &trans &trans &kp KP_NLCK                                                            &trans &trans &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &trans
        &trans &trans &trans &trans &trans &trans &kp SLCK           &trans &trans               &trans &trans           &trans &trans &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &trans
        &trans &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans &trans &trans &trans           &trans &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
        &trans &trans &trans &trans &trans                    &trans &trans &trans               &trans &trans &kp KP_N0               &trans     &trans       &kp KP_DOT    &trans          &trans
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2           &kp F3   &kp F4       &kp F5       &kp F6  &trans                                                         &trans &kp F7 &kp F8       &kp F9       &kp F10    &kp F11          &kp F12
        &trans &trans           &trans   &kp UP       &trans       &trans  &trans                                                         &trans &trans &kp F7       &kp F8       &kp F9     &kp F10          &trans
        &trans &trans           &kp LEFT &kp DOWN     &kp RIGHT    &trans  &trans        &trans &trans               &trans &trans        &trans &trans &kp F4       &kp F5       &kp F6     &kp F11          &trans
        &trans &trans           &trans   &kp C_BRI_DN &kp C_BRI_UP &trans         &trans &trans &trans &trans &trans &trans &trans &trans        &trans &kp F1       &kp F2       &kp F3     &kp F12          &trans
        &trans &kp C_PLAY_PAUSE &kp CAPS &kp C_PREV   &kp C_NEXT                  &trans &trans &trans               &trans &trans &trans               &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE &kp C_PLAY_PAUSE &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                          &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                                    &bootloader            &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR             &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                               &none           &none      &none      &none &none &none      &none      &none                                  &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                                       &rgb_ug RGB_TOG &bl BL_TOG &none                  &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };
  };
};
